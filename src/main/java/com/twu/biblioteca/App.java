/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.twu.biblioteca;

import com.twu.biblioteca.exceptions.MenuException;
import com.twu.biblioteca.options.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class App {
    static final String WELCOME_MESSAGE = "Welcome to Biblioteca. Your one-stop-shop for great book titles in Bangalore!";

    static private BufferedReader reader;
    static private Printer printer;

    public static void main(String[] args) {
        reader = new BufferedReader(new InputStreamReader(System.in));
        printer = new Printer(System.out);

        List<Book> books = createFakeListOfBooks();
        Library<Book> bookLibrary = new Library<>(printer, books);

        List<Movie> movies = createFakeListOfMovies();
        Library<Movie> movieLibrary = new Library<>(printer, movies);

        Menu menu = createMenu(bookLibrary, movieLibrary);

        printer.print(WELCOME_MESSAGE);

        int optionNumber;
        do {
            printer.print(menu);
            optionNumber = requestAction();
            try {
                menu.select(optionNumber);
            }
            catch (MenuException e) {
                printer.print(e.getMessage());
            }
        }
        while (optionNumber != 0);
    }

    private static Menu createMenu (Library<Book> bookLibrary, Library<Movie> movieLibrary) {
        Menu menu = new Menu();

        Option exitOption = new ExitOption();

        Option listOfBooks = new ListOfBooksOption(bookLibrary, printer);
        Option checkoutBookOption = new CheckoutBookOption(printer, reader, bookLibrary);
        Option returnBookOption = new ReturnBookOption(printer, reader, bookLibrary);

        Option listOfMovies = new ListOfMoviesOption(movieLibrary, printer);
        Option checkoutMovieOption = new CheckoutMovieOption(printer, reader, movieLibrary);
        Option returnMovieOption = new ReturnMovieOption(printer, reader, movieLibrary);

        Option logInOption = new LogInOption(printer, reader);
        Option logOutOption = new LogOutOption(printer);

        menu.add(exitOption);

        menu.add(listOfBooks);
        menu.add(checkoutBookOption);
        menu.add(returnBookOption);

        menu.add(listOfMovies);
        menu.add(checkoutMovieOption);
        menu.add(returnMovieOption);

        menu.add(logInOption);
        menu.add(logOutOption);

        return menu;
    }

    private static int requestAction() {
        String input = null;
        int optionNumber;

        try {
            input = reader.readLine();
        }
        catch (IOException e) {
            printer.print("Error reading output:\n".concat(e.getMessage()));
        }

        try {
            optionNumber = Integer.parseInt(input);
        }
        catch (NumberFormatException e) {
            printer.print("Invalid option. Please try again.");
            return -1;
        }
        return optionNumber;
    }

    private static List<Book> createFakeListOfBooks () {
        List<Book> books = new ArrayList<>();
        for (int i=1; i < 4; ++i) {
            String name = "Book" + i;
            String author = "Author" + i;
            String yearPublished = "Year" + i;

            Book book = new Book(name, author, yearPublished);

            books.add(book);
        }
        return books;
    }

    private static List<Movie> createFakeListOfMovies () {
        List<Movie> movies = new ArrayList<>();
        for (int i=1; i < 4; ++i) {
            String name = "Movie" + i;
            int yearPublished = 1900;
            String director = "Director" + i;
            int rating = 8;

            Movie movie = new Movie(name, yearPublished, director, rating);

            movies.add(movie);
        }
        return movies;
    }
}
